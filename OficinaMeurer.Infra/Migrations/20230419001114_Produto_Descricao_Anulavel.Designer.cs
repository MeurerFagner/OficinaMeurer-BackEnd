// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OficinaMeurer.Infra;

#nullable disable

namespace OficinaMeurer.Infra.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230419001114_Produto_Descricao_Anulavel")]
    partial class Produto_Descricao_Anulavel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OficinaMeurer.Domain.Entidades.Cliente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Ano")
                        .HasColumnType("integer");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Observacoes")
                        .HasColumnType("text");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CLIENTE", (string)null);
                });

            modelBuilder.Entity("OficinaMeurer.Domain.Entidades.OrdemDeServico", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("IdCliente")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdResponsavel")
                        .HasColumnType("bigint");

                    b.Property<string>("Observacoes")
                        .HasColumnType("text");

                    b.Property<string>("Solicitacao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdResponsavel");

                    b.ToTable("ORDEM_DE_SERVICO", (string)null);
                });

            modelBuilder.Entity("OficinaMeurer.Domain.Entidades.Produto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("PRODUTO", (string)null);
                });

            modelBuilder.Entity("OficinaMeurer.Domain.Entidades.ProdutoOrdemDeServico", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("IdOrdemDeServico")
                        .HasColumnType("bigint");

                    b.Property<long>("IdProduto")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IdOrdemDeServico");

                    b.HasIndex("IdProduto");

                    b.ToTable("PRODUTO_ORDEM_DE_SERVICO", (string)null);
                });

            modelBuilder.Entity("OficinaMeurer.Domain.Entidades.ProdutoServico", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("IdProduto")
                        .HasColumnType("bigint");

                    b.Property<long>("IdServico")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IdProduto");

                    b.HasIndex("IdServico");

                    b.ToTable("PRODUTO_SERVICO", (string)null);
                });

            modelBuilder.Entity("OficinaMeurer.Domain.Entidades.Responsavel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RESPONSAVEL", (string)null);
                });

            modelBuilder.Entity("OficinaMeurer.Domain.Entidades.Servico", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Observacoes")
                        .HasColumnType("text");

                    b.Property<decimal?>("ValorMaoDeObra")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("SERVICO", (string)null);
                });

            modelBuilder.Entity("OficinaMeurer.Domain.Entidades.ServicoOrdemDeServico", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("IdOrdemDeServico")
                        .HasColumnType("bigint");

                    b.Property<long>("IdServico")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IdOrdemDeServico");

                    b.HasIndex("IdServico");

                    b.ToTable("SERVICO_ORDEM_DE_SERVICO", (string)null);
                });

            modelBuilder.Entity("OficinaMeurer.Domain.Entidades.OrdemDeServico", b =>
                {
                    b.HasOne("OficinaMeurer.Domain.Entidades.Cliente", "Cliente")
                        .WithMany("OrdemDeServicos")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OficinaMeurer.Domain.Entidades.Responsavel", "Responsavel")
                        .WithMany("OrdemDeServicos")
                        .HasForeignKey("IdResponsavel");

                    b.Navigation("Cliente");

                    b.Navigation("Responsavel");
                });

            modelBuilder.Entity("OficinaMeurer.Domain.Entidades.ProdutoOrdemDeServico", b =>
                {
                    b.HasOne("OficinaMeurer.Domain.Entidades.OrdemDeServico", "OrdemDeServico")
                        .WithMany("ProdutosOS")
                        .HasForeignKey("IdOrdemDeServico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OficinaMeurer.Domain.Entidades.Produto", "Produto")
                        .WithMany("ProdutoOS")
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrdemDeServico");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("OficinaMeurer.Domain.Entidades.ProdutoServico", b =>
                {
                    b.HasOne("OficinaMeurer.Domain.Entidades.Produto", "Produto")
                        .WithMany("ProdutoServicos")
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OficinaMeurer.Domain.Entidades.Servico", "Servico")
                        .WithMany("ProdutosServico")
                        .HasForeignKey("IdServico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("OficinaMeurer.Domain.Entidades.ServicoOrdemDeServico", b =>
                {
                    b.HasOne("OficinaMeurer.Domain.Entidades.OrdemDeServico", "OrdemDeServico")
                        .WithMany("ServicosOS")
                        .HasForeignKey("IdOrdemDeServico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OficinaMeurer.Domain.Entidades.Servico", "Servico")
                        .WithMany("ServicoOS")
                        .HasForeignKey("IdServico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrdemDeServico");

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("OficinaMeurer.Domain.Entidades.Cliente", b =>
                {
                    b.Navigation("OrdemDeServicos");
                });

            modelBuilder.Entity("OficinaMeurer.Domain.Entidades.OrdemDeServico", b =>
                {
                    b.Navigation("ProdutosOS");

                    b.Navigation("ServicosOS");
                });

            modelBuilder.Entity("OficinaMeurer.Domain.Entidades.Produto", b =>
                {
                    b.Navigation("ProdutoOS");

                    b.Navigation("ProdutoServicos");
                });

            modelBuilder.Entity("OficinaMeurer.Domain.Entidades.Responsavel", b =>
                {
                    b.Navigation("OrdemDeServicos");
                });

            modelBuilder.Entity("OficinaMeurer.Domain.Entidades.Servico", b =>
                {
                    b.Navigation("ProdutosServico");

                    b.Navigation("ServicoOS");
                });
#pragma warning restore 612, 618
        }
    }
}
